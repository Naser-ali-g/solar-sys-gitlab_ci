workflow:
    name: NodeJS Solar System Application Pipeline
    rules:
        - if: $CI_COMMIT_BRANCH == 'main'
          when: always
        - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature/ && $CI_PIPELINE_SOURCE == 'merge_request_event' 
          when: always
        - when: never

stages:
  - testing

variables:
   MONGO_INITDB_ROOT_USERNAME: "root-user-1234"
   NODE_ENV_TESTING : "test"
   NODE_ENV_STAGE_PROD : "production"

unit_testing:
  stage: testing
  services:
    - name: siddharth67/mongo-db:non-prod
      alias: mongo
      variables:
         MONGO_INITDB_ROOT_PASSWORD: "root-password-1234"  
  image: node:17-alpine3.14
  cache:
    policy: pull-push
    key: testing
    paths:
      - node_modules
  before_script:
    - npm install
  script:
    - NODE_ENV=$NODE_ENV_TESTING npm test
  artifacts:
    name: Mocha Unit Testing
    expire_in: 3 weeks and 2 days
    when: always
    paths:
      - test-results.xml
    reports:
      junit: test-results.xml

code_coverage:
  stage: testing
  services:
    - name: siddharth67/mongo-db:non-prod
      alias: mongo
      variables:
         MONGO_INITDB_ROOT_PASSWORD: "root-password-1234"
  image: node:17-alpine3.14
  cache:
    policy: pull
    key: testing
    paths:
      - node_modules
  needs:
    - unit_testing
  before_script:
    - npm install
  script: |
    NODE_ENV=$NODE_ENV_TESTING npm run coverage
  artifacts:
    name: LCOV and Cobertura Coverage
    expire_in: 3 weeks and 2 days
    when: always
    paths:
    - coverage/
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  allow_failure: true
